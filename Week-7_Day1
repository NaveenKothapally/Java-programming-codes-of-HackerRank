Q1.Dr. Max has conducted the academic task in his class with 5 Multiple Choice Questions each having 4 options A/B/C/D. He wanted to write a program which can evaluate the test papers of all the N students such that each correct answer is awarded 1 mark and for incorrect answer penalty is 0.25 marks.

The program must read the number of students N and the the answers of all the N students in the form of a String. If any question is not attempted by any student, then X should be given as input corresponding to that question e.g. ABAXD

It is expected that the marks of all the N students are displayed separated by SPACE.

Input Format

First Line of the input reads the String of CORRECT ANSWERS

Second Line of the input reads the number of students N

Next N lines read the answer Strings of the N students respectively.

Constraints

N > 0

Input characters can be either in Upper Case or Lower Case

Else "Incorrect Input"

Output Format

Print the marks of all the N students separated by SPACE

Sample Input 0

ACBDC
2
BCXDX
AXXDC
Sample Output 0

1.75 3.0
SOL:
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
         Scanner sc = new Scanner(System.in);
        String correctAnswers = sc.nextLine().toUpperCase();
        int n = sc.nextInt();
        sc.nextLine(); // to consume the newline character
        
        // check for invalid input
        if (n <= 0 || correctAnswers.length() != 5 || !correctAnswers.matches("[A-D]+")) {
            System.out.println("Incorrect Input");
            return;
        }
        
        for (int i = 0; i < n; i++) {
            String studentAnswers = sc.nextLine().toUpperCase();
            // check for invalid input
            if (studentAnswers.length() != 5 || !studentAnswers.matches("[A-DX]+")) {
                System.out.println("Incorrect Input");
                return;
            }
            double score = 0.0;
            for (int j = 0; j < 5; j++) {
                if (studentAnswers.charAt(j) == 'X') {
                    // question not attempted
                    continue;
                }
                if (studentAnswers.charAt(j) == correctAnswers.charAt(j)) {
                    // correct answer
                    score += 1.0;
                } else {
                    // incorrect answer
                    score -= 0.25;
                }
            }
            System.out.print(score + " ");
        }
    }
}
Q2.
Chacha Chaudhary has asked Sheena to find out the Nth occurence of any Word in the Paragraph. Sheena finds it a tedious task to find Nth occurence so she wants you to write a small java program which can solve her problem and she will give you a gift for helping her. Let us write a code.

Input Format

First line reads the paragraph contents

Second line reads the word to be found and N separated by Space

Constraints

N>0 Else "Incorrect Input"

Output Format

Prints the starting index of the Nth occurence of the word in the paragraph

Prints Not Present if not occuring even a single time and prints the last occurence if occuring less than N times.

Sample Input 0

Aana bought banana.
ana 1
Sample Output 0

1
Sample Input 1

Aana bought banana
baa 3
Sample Output 1

Not Present
SOL;
import java.util.Scanner;

public class WordOccurrence {
    public static void main(String[] args) {
        Scanner st = new Scanner(System.in);
        String paragraph = st.nextLine().toLowerCase();
        String word = st.next().toLowerCase();
        int n = st.nextInt();

        if (n <= 0) {
            System.out.println("Incorrect Input");
            return;
        }
        int count = 0;
        int index = -1;
        int lastOccurrenceIndex = -1;

        while (true) {
            index = paragraph.indexOf(word, index + 1);
            if (index == -1) {
                break; 
            }
            count++;
            if (count == n) {
                System.out.println(index);
                return;
            }
            lastOccurrenceIndex = index;
        }
        if (count == 0) {
            System.out.println("Not Present");
            return;
        }
        System.out.println(lastOccurrenceIndex);
    }
}
